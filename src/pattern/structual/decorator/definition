装饰者模式
概念：在不改变原类文件的情况下，动态扩展一个对象的功能。它是通过创建一个包装器类来包裹真实的对象，从而扩展对象的功能。

1. 装饰器内部必须有一个被装饰的对象，类似于适配器模式中的对象适配器模式
2. 装饰器类与被装饰类必须实现相同的接口
3. 装饰器类可以扩展被装饰器类的功能
4. 被装饰器类文件不改变
5. 不使用继承
6. 动态扩展
7. 可以装饰一个接口（抽象类）的任意实现（子）类，包括装饰器类自身也可以再被装饰
8. 可以为一个被装饰对象定义不同的装饰器，以便完成不同的功能

-- code --
		Decorator decorator = new Decorator(new OriClass());
		decorator.commonMehotd("Hello Decorate Pattern");